name: Cypress CI september 2024

on: push

jobs:
  tests-chrome:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (git clone)
        uses: actions/checkout@v4

      - name: Set up Node.js (Github Actions instaluje nam wewnątrz kontenera node js w wersji 20)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout external repository (pobranie docker compose'a z środowiskiem testowym)
        uses: actions/checkout@v4
        with:
          repository: "slawekradzyminski/awesome-localstack"
          path: "awesome-localstack"

      - name: Run Docker Compose (uruchamianie środowiska testowego wewnątrz kontenera)
        run: |
          cd awesome-localstack
          chmod +x run-docker-compose-ci.sh
          ./run-docker-compose-ci.sh

      - name: Install (instalacja zaleznosci projektu w tym cypressa)
        run: npm install

      - name: Setup Chrome (instalacja Chrome'a wewnątrz kontenera)
        uses: browser-actions/setup-chrome@v1

      - name: Run Cypress tests
        run: npx percy exec -- npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }} --browser chrome --env login=${{ secrets.LOGIN }},password=${{ secrets.PASSWORD }}
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  
      - name: Warunkowe udostępnienie screenshotów przy failu
        uses: actions/upload-artifact@v4 
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

  tests-firefox:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (git clone)
        uses: actions/checkout@v4

      - name: Set up Node.js (instalacja Node.js wewnątrz kontenera)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout external repository (pobranie docker compose z środowiskiem testowym)
        uses: actions/checkout@v4
        with:
          repository: "slawekradzyminski/awesome-localstack"
          path: "awesome-localstack"

      - name: Run Docker Compose (uruchomienie środowiska testowego wewnątrz kontenera)
        run: |
          cd awesome-localstack
          chmod +x run-docker-compose-ci.sh
          ./run-docker-compose-ci.sh

      - name: Install dependencies (instalacja zależności projektu, w tym Cypressa)
        run: npm install

      - name: Setup Firefox (Firefox jest już domyślnie zainstalowany w Ubuntu)
        run: echo "Firefox jest już zainstalowany"

      - name: Run Cypress tests in Firefox
        run: npx cypress run --record --key ${{ secrets.CYPRESS_RECORD_KEY }} --browser firefox --env login=${{ secrets.LOGIN }},password=${{ secrets.PASSWORD }}
  
      - name: Warunkowe udostępnienie screenshotów w przypadku faila (Firefox)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-firefox
          path: cypress/screenshots
          if-no-files-found: ignore